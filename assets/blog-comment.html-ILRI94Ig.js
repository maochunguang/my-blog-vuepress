import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as a,d as t,e as s,a as o}from"./app-bmOsSVPh.js";const i={},l=s("h1",{id:"vuepress-hope使用twikoo评论系统",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vuepress-hope使用twikoo评论系统"},[s("span",null,"vuepress-hope使用Twikoo评论系统")])],-1),c=s("p",null,"使用静态博客，永远离不开评论的问题。早些年有免费的“多说”，可惜因为资金问题倒闭了。现在博客的评论很多都是基于github的，对于国内用户来说访问太慢了。这里使用Twikoo主要是自己有云服务器，自己搭建Twikoo，国内用户访问比较快。",-1),d=o(`<h2 id="安装twikoo步骤" tabindex="-1"><a class="header-anchor" href="#安装twikoo步骤"><span>安装Twikoo步骤</span></a></h2><h4 id="_1、安装nodejs" tabindex="-1"><a class="header-anchor" href="#_1、安装nodejs"><span>1、安装nodejs</span></a></h4><p>这里建议使用nvm安装，先安装nvm，然后在安装nodejs。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 安装nvm</span>
<span class="token function">wget</span> -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment">## 安装nodejs的lts版本</span>
nvm <span class="token function">install</span> <span class="token parameter variable">--lts</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、安装twikoo" tabindex="-1"><a class="header-anchor" href="#_2、安装twikoo"><span>2、安装twikoo</span></a></h4><p>使用npm安装tkserver。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> tkserver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3、配置环境变量" tabindex="-1"><a class="header-anchor" href="#_3、配置环境变量"><span>3、配置环境变量</span></a></h4><p>Twikoo支持的环境变量如下，这些都是可选的，如果不配置，就走默认值。</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;"><code>MONGODB_URI</code></td><td style="text-align:left;">MongoDB 数据库连接字符串，不传则使用 lokijs</td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>MONGO_URL</code></td><td style="text-align:left;">MongoDB 数据库连接字符串，不传则使用 lokijs</td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_DATA</code></td><td style="text-align:left;">lokijs 数据库存储路径</td><td style="text-align:left;"><code>./data</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_PORT</code></td><td style="text-align:left;">端口号</td><td style="text-align:left;"><code>8080</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_THROTTLE</code></td><td style="text-align:left;">IP 请求限流，当同一 IP 短时间内请求次数超过阈值将对该 IP 返回错误</td><td style="text-align:left;"><code>250</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_LOCALHOST_ONLY</code></td><td style="text-align:left;">为<code>true</code>时只监听本地请求，使得 nginx 等服务器反代之后不暴露原始端口</td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_LOG_LEVEL</code></td><td style="text-align:left;">日志级别，支持 <code>verbose</code> / <code>info</code> / <code>warn</code> / <code>error</code></td><td style="text-align:left;"><code>info</code></td></tr><tr><td style="text-align:left;"><code>TWIKOO_IP_HEADERS</code></td><td style="text-align:left;">在一些特殊情况下使用，如使用了<code>CloudFlare CDN</code> 它会将请求 IP 写到请求头的 <code>cf-connecting-ip</code> 字段上，为了能够正确的获取请求 IP 你可以写成 <code>[&#39;headers.cf-connecting-ip&#39;]</code></td><td style="text-align:left;"><code>[]</code></td></tr></tbody></table><p>我这里为了方便，配置了端口和数据存储路径。编辑<code>~/.bashrc</code>文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">TWIKOO_PORT</span><span class="token operator">=</span><span class="token number">9898</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">TWIKOO_DATA</span><span class="token operator">=</span>/home/ubuntu/soft/twikoo/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后 <code>source ~/.bashrc</code>。</p><h4 id="_4、启动twikoo服务" tabindex="-1"><a class="header-anchor" href="#_4、启动twikoo服务"><span>4、启动twikoo服务</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 第一种直接启动</span>
tkserver
<span class="token comment"># 后台启动</span>
<span class="token function">nohup</span> tkserver <span class="token operator">&gt;&gt;</span> tkserver.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-pics-1252092369.cos.ap-beijing.myqcloud.com/image-20240210094842499.png" alt="image-20240210094842499" tabindex="0" loading="lazy"><figcaption>image-20240210094842499</figcaption></figure><h4 id="_5、配置nginx代理" tabindex="-1"><a class="header-anchor" href="#_5、配置nginx代理"><span>5、配置nginx代理</span></a></h4><p>编辑<code>/etc/nginx/nginx.conf</code>，或者编辑<code>/etc/nginx/sites-available/default</code>文件，配置端口代理。我由于博客在<code>/etc/nginx/sites-available/default</code>里配置，所以代理也是配置在这里。</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">server_name</span> codingxxxx.com</span><span class="token punctuation">;</span>
        <span class="token comment"># 重定向到 HTTPS</span>
        <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>        
		
<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
		<span class="token comment"># 监听https端口</span>
        <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>
		<span class="token comment"># https证书配置</span>
        <span class="token directive"><span class="token keyword">ssl_certificate</span> /etc/nginx/ssl/xxx.crt</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/nginx/ssl/xxxkey</span><span class="token punctuation">;</span>

        <span class="token directive"><span class="token keyword">server_name</span> codingxxxx.com</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">root</span> /home/ubuntu/blog/</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">index</span> index.html</span><span class="token punctuation">;</span>

        <span class="token directive"><span class="token keyword">location</span> /my_comment</span> <span class="token punctuation">{</span>
                <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:9898</span><span class="token punctuation">;</span>
                <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>
                <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用域名访问一下，可以看到返回结果：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Twikoo 云函数运行正常，请参考 https://twikoo.js.org/frontend.html 完成前端的配置&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.6.31&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置vuepress主题" tabindex="-1"><a class="header-anchor" href="#配置vuepress主题"><span>配置vuepress主题</span></a></h2><p>先在博客项目的根目录安装twikoo，<code>pnpm install twikoo</code>。这里需要注意的是服务器安装的twikoo，和博客里安装的twikoo版本最好是一样的，这样能避免一些兼容问题。</p><p>然后修改<code>theme.ts</code>文件，设置<code>provider</code>和<code>envId。</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>    comment<span class="token operator">:</span> <span class="token punctuation">{</span>
      comment<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      provider<span class="token operator">:</span> <span class="token string">&quot;Twikoo&quot;</span><span class="token punctuation">,</span>
      envId<span class="token operator">:</span> <span class="token string">&quot;https://xxx.site/my_comment&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后重新生成博客页面，<code>npm run dev:build</code>。发布到gh-pages即可。</p><figure><img src="https://blog-pics-1252092369.cos.ap-beijing.myqcloud.com/image-20240210131620797.png" alt="image-20240210131620797" tabindex="0" loading="lazy"><figcaption>image-20240210131620797</figcaption></figure>`,27);function p(r,u){return e(),a("div",null,[l,c,t(" more "),d])}const m=n(i,[["render",p],["__file","blog-comment.html.vue"]]);export{m as default};
