import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as s,c as i,b as a,d as o,e as t,f as l}from"./app-DQRx02f7.js";const c={},u=o("h1",{id:"各个语言的命令行工具",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#各个语言的命令行工具"},[o("span",null,"各个语言的命令行工具")])],-1),h=o("p",null,"无论是什么语言的开发，都会用到命令行工具。在自己的开源项目里，创建一个属于自己的命令行工具，不仅体现了一个项目的专业性，更显得十分有逼格。",-1),d=o("p",null,"我搜集了github上，常用编程语言中的命令行解析库，用这些工具可以非常容易创建出炫酷的命令行工具。",-1),_=o("h2",{id:"开源命令行工具",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#开源命令行工具"},[o("span",null,"开源命令行工具")])],-1),p=o("strong",null,"Go - Cobra:",-1),m=o("li",null,[o("code",null,"Cobra"),t(" 是一个用于 Go 语言的命令行解析库。它支持命令、子命令、选项、参数等的定义和解析，同时提供了友好的用户界面。")],-1),g={href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"},b=o("strong",null,"Rust - Clap",-1),f=o("p",null,[o("strong",null,"Clap:"),t(),o("code",null,"Clap"),t(" 是 Rust 中一款优秀的命令行解析库，提供了简洁而灵活的 API。它支持参数、子命令、值验证等，并生成详细的帮助文档。")],-1),y={href:"https://github.com/clap-rs/clap",target:"_blank",rel:"noopener noreferrer"},C=o("strong",null,"Node.js - Commander.js:",-1),k=o("li",null,[o("p",null,[o("strong",null,"Commander.js:"),t(),o("code",null,"Commander.js"),t(" 是一个用于 Node.js 的流行的命令行解析库，提供了简单而强大的接口，用于创建命令行工具的命令和选项。它支持命令、子命令、选项等，并提供了清晰的链式 API。")])],-1),P={href:"https://github.com/tj/commander.js",target:"_blank",rel:"noopener noreferrer"},G=o("strong",null,"Python - argparse:",-1),T=o("li",null,[o("code",null,"argparse"),t(" 是 Python 标准库中的模块，用于解析命令行参数。它提供了很多功能，包括命令、子命令、选项等的定义和解析。")],-1),H={href:"https://docs.python.org/3/library/argparse.html",target:"_blank",rel:"noopener noreferrer"},v=o("strong",null,"Ruby - OptionParser:",-1),j=o("li",null,[o("code",null,"OptionParser"),t(" 是 Ruby 的标准库之一，用于处理命令行选项。它支持定义命令、子命令、选项等。")],-1),I={href:"https://ruby-doc.org/stdlib/libdoc/optparse/rdoc/OptionParser.html",target:"_blank",rel:"noopener noreferrer"},N=o("strong",null,"Java - Picocli:",-1),x=o("li",null,[o("code",null,"Picocli"),t(" 是一个用于 Java 的命令行解析库，它提供了简单且功能强大的 API，支持命令、子命令、选项等。")],-1),J={href:"https://picocli.info/",target:"_blank",rel:"noopener noreferrer"},L=o("strong",null,"C++ - CLI11:",-1),R=o("li",null,[o("code",null,"CLI11"),t(" 是一个用于 C++ 的命令行解析库，具有简洁的语法和强大的功能。它支持选项、参数、子命令等。")],-1),V={href:"https://github.com/CLIUtils/CLI11",target:"_blank",rel:"noopener noreferrer"},S=o("strong",null,"JavaScript (Node.js) - yargs:",-1),Z=o("li",null,[o("code",null,"yargs"),t(" 是一个用于 Node.js 的命令行解析库，具有清晰的 API，支持命令、子命令、选项等。")],-1),A={href:"https://github.com/yargs/yargs",target:"_blank",rel:"noopener noreferrer"},O=o("strong",null,"Python - Click:",-1),z=o("li",null,[o("code",null,"Click"),t(" 是一个用于 Python 的简单而强大的命令行框架，具有直观的语法。它支持参数、子命令、自动生成的帮助文档等。")],-1),B={href:"https://github.com/pallets/click",target:"_blank",rel:"noopener noreferrer"},E=o("li",null,[o("strong",null,"Ruby - Thor:")],-1),D=o("li",null,[o("code",null,"Thor"),t(" 是一个用于 Ruby 的命令行框架，专注于构建强大的命令行应用。它支持命令、子命令、选项等。")],-1),M={href:"https://github.com/erikhuda/thor",target:"_blank",rel:"noopener noreferrer"},w={start:"11"},U=o("strong",null,"Go - Viper:",-1),q=o("li",null,[o("code",null,"Viper"),t(" 是一个用于 Go 的配置解决方案，但也包含命令行解析功能。它易于使用，支持子命令、环境变量覆盖等。")],-1),F={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},K=o("li",null,[o("strong",null,"Java - JCommander:")],-1),Q=o("li",null,[o("code",null,"JCommander"),t(" 是一个用于 Java 的轻量级命令行解析库，提供注解驱动的方式定义命令行参数。它支持参数、子命令、自动生成帮助等。")],-1),W={href:"https://github.com/cbeust/jcommander",target:"_blank",rel:"noopener noreferrer"},X={start:"12"},Y=o("strong",null,"PHP - Symfony Console Component:",-1),$=o("li",null,[o("p",null,[o("strong",null,"Symfony Console Component:"),t(" Symfony 是 PHP 中一个流行的框架，它包含了 "),o("code",null,"Console Component"),t("，这是一个功能强大的命令行解析库。它支持命令、参数、选项、自动生成的帮助文档等。")])],-1),oo={href:"https://github.com/symfony/console",target:"_blank",rel:"noopener noreferrer"};function to(eo,lo){const e=r("ExternalLinkIcon");return s(),i("div",null,[u,h,d,a(" more "),_,o("ol",null,[o("li",null,[p,o("ul",null,[m,o("li",null,[t("GitHub 链接: "),o("a",g,[t("Cobra"),l(e)])])])]),o("li",null,[b,t(": "),o("ul",null,[o("li",null,[f,o("ul",null,[o("li",null,[t("GitHub 链接: "),o("a",y,[t("Clap"),l(e)])])])])])]),o("li",null,[C,o("ul",null,[k,o("li",null,[o("p",null,[t("GitHub 链接: "),o("a",P,[t("Commander.js"),l(e)])])])])]),o("li",null,[G,o("ul",null,[T,o("li",null,[t("GitHub 链接: "),o("a",H,[t("argparse"),l(e)])])])]),o("li",null,[v,o("ul",null,[j,o("li",null,[t("GitHub 链接: "),o("a",I,[t("OptionParser"),l(e)])])])]),o("li",null,[N,o("ul",null,[x,o("li",null,[t("GitHub 链接: "),o("a",J,[t("Picocli"),l(e)])])])]),o("li",null,[L,o("ul",null,[R,o("li",null,[t("GitHub 链接: "),o("a",V,[t("CLI11"),l(e)])])])]),o("li",null,[S,o("ul",null,[Z,o("li",null,[t("GitHub 链接: "),o("a",A,[t("yargs"),l(e)])])])]),o("li",null,[O,o("ul",null,[z,o("li",null,[t("GitHub 链接: "),o("a",B,[t("Click"),l(e)])])])]),E]),o("ul",null,[D,o("li",null,[t("GitHub 链接: "),o("a",M,[t("Thor"),l(e)])])]),o("ol",w,[o("li",null,[U,o("ul",null,[q,o("li",null,[t("GitHub 链接: "),o("a",F,[t("Viper"),l(e)])])])]),K]),o("ul",null,[Q,o("li",null,[t("GitHub 链接: "),o("a",W,[t("JCommander"),l(e)])])]),o("ol",X,[o("li",null,[Y,o("ul",null,[$,o("li",null,[o("p",null,[t("GitHub 链接: "),o("a",oo,[t("Symfony Console"),l(e)])])])])])])])}const so=n(c,[["render",to],["__file","command-tool.html.vue"]]),io=JSON.parse('{"path":"/dev-tool/command-tool.html","title":"各个语言的命令行工具","lang":"zh-CN","frontmatter":{"title":"各个语言的命令行工具","icon":"tool","date":"2023-11-16T00:00:00.000Z","category":["开发工具"],"tag":["命令行"],"description":"各个语言的命令行工具 无论是什么语言的开发，都会用到命令行工具。在自己的开源项目里，创建一个属于自己的命令行工具，不仅体现了一个项目的专业性，更显得十分有逼格。 我搜集了github上，常用编程语言中的命令行解析库，用这些工具可以非常容易创建出炫酷的命令行工具。 开源命令行工具 Go - Cobra: Cobra 是一个用于 Go 语言的命令行解析库。...","head":[["meta",{"property":"og:url","content":"https://codingmore.site/dev-tool/command-tool.html"}],["meta",{"property":"og:site_name","content":"Coding More"}],["meta",{"property":"og:title","content":"各个语言的命令行工具"}],["meta",{"property":"og:description","content":"各个语言的命令行工具 无论是什么语言的开发，都会用到命令行工具。在自己的开源项目里，创建一个属于自己的命令行工具，不仅体现了一个项目的专业性，更显得十分有逼格。 我搜集了github上，常用编程语言中的命令行解析库，用这些工具可以非常容易创建出炫酷的命令行工具。 开源命令行工具 Go - Cobra: Cobra 是一个用于 Go 语言的命令行解析库。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-23T14:49:47.000Z"}],["meta",{"property":"article:author","content":"Tommy"}],["meta",{"property":"article:tag","content":"命令行"}],["meta",{"property":"article:published_time","content":"2023-11-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-23T14:49:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"各个语言的命令行工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-23T14:49:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tommy\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"开源命令行工具","slug":"开源命令行工具","link":"#开源命令行工具","children":[]}],"git":{"createdTime":1708617045000,"updatedTime":1727102987000,"contributors":[{"name":"maochunguang","email":"mcg915881127@163.com","commits":2}]},"readingTime":{"minutes":2.79,"words":836},"filePathRelative":"dev-tool/command-tool.md","localizedDate":"2023年11月16日","excerpt":"\\n<p>无论是什么语言的开发，都会用到命令行工具。在自己的开源项目里，创建一个属于自己的命令行工具，不仅体现了一个项目的专业性，更显得十分有逼格。</p>\\n<p>我搜集了github上，常用编程语言中的命令行解析库，用这些工具可以非常容易创建出炫酷的命令行工具。</p>\\n","autoDesc":true}');export{so as comp,io as data};
