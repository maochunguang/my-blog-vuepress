const e=JSON.parse('{"key":"v-3f491283","path":"/java-five-study/java-bean-copy.html","title":"JavaBean复制框架调研","lang":"zh-CN","frontmatter":{"title":"JavaBean复制框架调研","icon":"copy","date":"2024-02-06T00:00:00.000Z","category":["java入门到精通","五分钟学java"],"tag":["java框架对比"],"description":"一、背景 每一个写java的同学都会为一堆set，get方法烦恼，特别是使用mvc分层或者DDD领域模型开发之后。有VO（View Object）视图对象，DTO（Data Transfer Object）数据传输对象，DO（Domain Object）领域对象，PO（Persistent Object）持久层对象等等。不同层之间进行交互时，免不了进行对象的复制。每次已修改底层数据结构，都要从头到尾改一遍，实在是不优雅。这篇文章让你以后不用写set和get赋值。 在bean复制框架之前： image (1)","head":[["meta",{"property":"og:url","content":"https://codingmore.site/java-five-study/java-bean-copy.html"}],["meta",{"property":"og:site_name","content":"Coding More"}],["meta",{"property":"og:title","content":"JavaBean复制框架调研"}],["meta",{"property":"og:description","content":"一、背景 每一个写java的同学都会为一堆set，get方法烦恼，特别是使用mvc分层或者DDD领域模型开发之后。有VO（View Object）视图对象，DTO（Data Transfer Object）数据传输对象，DO（Domain Object）领域对象，PO（Persistent Object）持久层对象等等。不同层之间进行交互时，免不了进行对象的复制。每次已修改底层数据结构，都要从头到尾改一遍，实在是不优雅。这篇文章让你以后不用写set和get赋值。 在bean复制框架之前： image (1)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Tommy"}],["meta",{"property":"article:tag","content":"java框架对比"}],["meta",{"property":"article:published_time","content":"2024-02-06T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaBean复制框架调研\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tommy\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、背景","slug":"一、背景","link":"#一、背景","children":[]},{"level":2,"title":"二、bean复制框架原理和使用","slug":"二、bean复制框架原理和使用","link":"#二、bean复制框架原理和使用","children":[{"level":3,"title":"1、Spring-BeanUtils，BeanUtils.``*copyProperties*","slug":"_1、spring-beanutils-beanutils-copyproperties","link":"#_1、spring-beanutils-beanutils-copyproperties","children":[]},{"level":3,"title":"2、Apache-BeanUtils，PropertyUtils.``*copyProperties*","slug":"_2、apache-beanutils-propertyutils-copyproperties","link":"#_2、apache-beanutils-propertyutils-copyproperties","children":[]},{"level":3,"title":"3、Cglib，BeanCopier","slug":"_3、cglib-beancopier","link":"#_3、cglib-beancopier","children":[]},{"level":3,"title":"4、dozer，http://dozer.sourceforge.net/","slug":"_4、dozer-http-dozer-sourceforge-net","link":"#_4、dozer-http-dozer-sourceforge-net","children":[]},{"level":3,"title":"5、mapstruct，https://mapstruct.org/","slug":"_5、mapstruct-https-mapstruct-org","link":"#_5、mapstruct-https-mapstruct-org","children":[]}]},{"level":2,"title":"三、性能压测对比","slug":"三、性能压测对比","link":"#三、性能压测对比","children":[]},{"level":2,"title":"四、框架对比总结","slug":"四、框架对比总结","link":"#四、框架对比总结","children":[]},{"level":2,"title":"五、结论","slug":"五、结论","link":"#五、结论","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.74,"words":1123},"filePathRelative":"java-five-study/java-bean-copy.md","localizedDate":"2024年2月6日","excerpt":"<h2>一、背景</h2>\\n<p>每一个写java的同学都会为一堆set，get方法烦恼，特别是使用mvc分层或者DDD领域模型开发之后。有VO（View Object）视图对象，DTO（Data Transfer Object）数据传输对象，DO（Domain Object）领域对象，PO（Persistent Object）持久层对象等等。不同层之间进行交互时，免不了进行对象的复制。每次已修改底层数据结构，都要从头到尾改一遍，实在是不优雅。这篇文章让你以后不用写set和get赋值。</p>\\n<p><strong>在bean复制框架之前：</strong></p>\\n<figure><img src=\\"https://blog-pics-1252092369.cos.ap-beijing.myqcloud.com/image (1).png\\" alt=\\"image (1)\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image (1)</figcaption></figure>","autoDesc":true}');export{e as data};
