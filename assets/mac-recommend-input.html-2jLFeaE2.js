import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as c,c as p,d as o,a as n,f as a,b as e,e as t}from"./app-3Ly0oyrh.js";const d={},u=n("h1",{id:"mac自定义输入法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mac自定义输入法"},[n("span",null,"mac自定义输入法")])],-1),r=n("p",null,[a("从2015年开始用mac，时光荏苒，不知不觉已经九年了。今天就分享一个可以高度自定义的输入法，“鼠须管”。"),n("br"),a(" “鼠须管”输入法，从输入法名字，样式，词库，行为等都可以自定义的输入法，推荐给有一定折腾能力的软件开发者。")],-1),m=n("h2",{id:"鼠须管是什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#鼠须管是什么"},[n("span",null,"鼠须管是什么？")])],-1),k={href:"https://rime.im/",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),b=n("ul",null,[n("li",null,"鼠须管是mac版本的实现。"),n("li",null,"小狼毫是windows版本的实现。")],-1),y=n("h2",{id:"如何安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何安装"},[n("span",null,"如何安装")])],-1),h=n("h4",{id:"方法一、直接安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方法一、直接安装"},[n("span",null,"方法一、直接安装")])],-1),g={href:"https://github.com/rime/squirrel/releases/tag/0.16.2",target:"_blank",rel:"noopener noreferrer"},_=t(`<h4 id="方案二、brew安装" tabindex="-1"><a class="header-anchor" href="#方案二、brew安装"><span>方案二、brew安装</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> squirrel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="如何配置" tabindex="-1"><a class="header-anchor" href="#如何配置"><span>如何配置</span></a></h2><p>建议使用plum进行配置管理，建议把plum安装到 <code>~/Library/Rime</code>目录，这个也是鼠须管输入法的配置目录。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--depth</span> <span class="token number">1</span> https://github.com/rime/plum.git
<span class="token builtin class-name">cd</span> plum
<span class="token function">bash</span> rime-install :preset
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>plum可以安装非常多的东西，建议按需安装，推荐安装的是 emoj，明月简拼。我个人使用的是<strong>明月简拼</strong>，所以后面很多的配置都是基于这个来的。</p><p>常见的配置文件如下：</p><table><thead><tr><th style="text-align:left;">文件</th><th style="text-align:left;">注释</th></tr></thead><tbody><tr><td style="text-align:left;">default.custom.yaml</td><td style="text-align:left;">核心配置、全局配置</td></tr><tr><td style="text-align:left;">squirrel.custom.yaml</td><td style="text-align:left;">平台相关配置。样式皮肤，不同软件默认输入法状态等。</td></tr><tr><td style="text-align:left;">&lt;方案标识&gt;.custom.yaml</td><td style="text-align:left;">对预设输入方案的定制配置</td></tr><tr><td style="text-align:left;">&lt;名称&gt;.dict.yaml</td><td style="text-align:left;">词典</td></tr><tr><td style="text-align:left;">custom_phrase.txt</td><td style="text-align:left;">自定义短语</td></tr></tbody></table><p><strong>修改配置文件后记得重新部署才能生效。mac 上的快捷键是 <code>Ctrl + Option + ~</code>。</strong></p><h4 id="_1、配置外观" tabindex="-1"><a class="header-anchor" href="#_1、配置外观"><span>1、配置外观</span></a></h4><p>编辑<code>squirrel.custom.yaml</code> 文件，这里主要是修改输入法的字体，主题，文字大小，还有横排竖排展示等。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token comment"># 修改程序外观</span>
  <span class="token key atrule">style</span><span class="token punctuation">:</span>
    <span class="token key atrule">color_scheme</span><span class="token punctuation">:</span> clean_white    <span class="token comment"># 选择配色主题（squirrel.yaml 源文件中预定义了多种主题）</span>
    <span class="token key atrule">font_face</span><span class="token punctuation">:</span> Hei                  <span class="token comment"># 候选词字体（可以使用 macOS 自带的“字体册.app”检索）</span>
    <span class="token key atrule">font_point</span><span class="token punctuation">:</span> <span class="token number">16</span>                  <span class="token comment"># 候选词大小</span>
    <span class="token key atrule">label_font_face</span><span class="token punctuation">:</span> Hei   			<span class="token comment"># 候选词编号字体</span>
    <span class="token key atrule">label_font_size</span><span class="token punctuation">:</span> <span class="token number">18</span>             <span class="token comment"># 候选词编号大小</span>
    <span class="token key atrule">horizontal</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>                <span class="token comment"># 候选词是否横排</span>
    <span class="token key atrule">inline_preedit</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>           <span class="token comment"># true 将待转字母嵌入显示在目标程序窗口，false 将待转字母显示在输入法窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑default.custom.yaml文件，设置默认输入法，候选词个数。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token key atrule">menu</span><span class="token punctuation">:</span>
    <span class="token key atrule">page_size</span><span class="token punctuation">:</span> <span class="token number">9</span>
  <span class="token key atrule">schema_list</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">schema</span><span class="token punctuation">:</span> luna_pinyin_simp
    <span class="token comment"># - schema: easy_en</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、emoj输入设置" tabindex="-1"><a class="header-anchor" href="#_2、emoj输入设置"><span>2、emoj输入设置</span></a></h4><p>编辑luna_pinyin_simp.custom.yaml文件</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">__patch</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">patch/+</span><span class="token punctuation">:</span>
      <span class="token key atrule">__include</span><span class="token punctuation">:</span> emoji_suggestion<span class="token punctuation">:</span>/patch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用输入法，输入篮球，就能看到🏀️的表情了。</p><h4 id="_3、特定程序的默认输入" tabindex="-1"><a class="header-anchor" href="#_3、特定程序的默认输入"><span>3、特定程序的默认输入</span></a></h4><p>这个比较实用，比如在命令行界面，默认输入英文，在文本编辑器默认使用中文等，这里都很容易实现。由于我使用的是明月简拼，所以只需要修改<code>luna_pinyin_simp.custom.yaml</code>文件</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token key atrule">app_options/com.googlecode.iterm2</span><span class="token punctuation">:</span>  <span class="token comment"># 程序名字全用小写字母</span>
    <span class="token key atrule">ascii_mode</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">sacii_punct</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里需要注意的是，程序的名字如何找。</p><p>活动监视器 --» 搜索进程 --» 检查所选进程 --» 点击取样 --» 找到<code>Identifier</code>即可。</p><figure><img src="https://blog-pics-1252092369.cos.ap-beijing.myqcloud.com/image-20240209212920272.png" alt="image-20240209212920272" tabindex="0" loading="lazy"><figcaption>image-20240209212920272</figcaption></figure><h4 id="_4、自定义短语" tabindex="-1"><a class="header-anchor" href="#_4、自定义短语"><span>4、自定义短语</span></a></h4><p>这个比较简单，编辑<code>custom_phrase.txt</code>文件。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>马上到 msd
稍等一下 sdyx
我正在开会，稍后回复你 wzzkh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、自定义词典" tabindex="-1"><a class="header-anchor" href="#_5、自定义词典"><span>5、自定义词典</span></a></h4><p>首先这里不记录也不推荐各位导入网上的词典，比如搜狗词典，百度词典。因为它们很多日积月累非常庞大，包含了不少已经过时的词汇，都非常的大，影响性能。Rime 在使用的过程中会逐步积累真正常用的词汇。</p><p>第一步，查看当前方案所使用的词典文件。「明月拼音」里默认配置如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">translator</span><span class="token punctuation">:</span>
  <span class="token key atrule">dictionary</span><span class="token punctuation">:</span> luna_pinyin <span class="token comment"># &lt;-- 这个就是使用的词典</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),f=n("code",null,"xxx.dict.yaml",-1),x={href:"https://github.com/rime/home/wiki/RimeWithSchemata#%E7%B7%A8%E5%AF%AB%E8%A9%9E%E5%85%B8",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> my_pinyin
<span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span>
<span class="token key atrule">sort</span><span class="token punctuation">:</span> by_weight
<span class="token key atrule">use_preset_vocabulary</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">import_tables</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> luna_pinyin
<span class="token punctuation">...</span>

测试    ce shi
集美    ji mei
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键点有两个：</p><ol><li><code>import_tables</code> 里记得导入方案原来使用的词典。</li><li>每一个条目不同字段用 <code>Tab</code> 分隔。部分编辑器会自动转成空格，注意！</li></ol><p>最后编辑我们的方案定制文件 <code>luna_pinyin_simp.custom.yaml</code>，把词典改成自己创建的：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token key atrule">translator/dictionary</span><span class="token punctuation">:</span> my_pinyin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、自定义标点符号" tabindex="-1"><a class="header-anchor" href="#_6、自定义标点符号"><span>6、自定义标点符号</span></a></h4><p>默认的符号会有很多，比如我输入$，默认能出一堆符号，我要连续输入的时候，更麻烦。因此这里需要特殊配置一下。</p><figure><img src="https://blog-pics-1252092369.cos.ap-beijing.myqcloud.com/image-20240209225140678.png" alt="image-20240209225140678" tabindex="0" loading="lazy"><figcaption>image-20240209225140678</figcaption></figure><p>对于方案「明月拼音」，输入 <code>{</code> 默认会有一堆选项，要是我希望和 mac 系统输入法一样直接输入 <code>「</code> 呢。查看输入方案定义，发现引用了 <code>symbols</code>：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">punctuator</span><span class="token punctuation">:</span>
  <span class="token key atrule">import_preset</span><span class="token punctuation">:</span> symbols
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再看看 <code>symbols.yaml</code> 里面有一大堆形形色色的符号，总体上分为全角模式、半角模式与图形。其中半角模式的定义如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">&#39;{&#39;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span> 『<span class="token punctuation">,</span> 〖<span class="token punctuation">,</span> ｛ <span class="token punctuation">]</span>
<span class="token key atrule">&#39;}&#39;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span> 』<span class="token punctuation">,</span> 〗<span class="token punctuation">,</span> ｝ <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>仿照这个模式来编写定制文件 <code>luna_pinyin_simp.custom.yaml</code>:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token key atrule">punctuator/half_shape</span><span class="token punctuation">:</span>
    <span class="token key atrule">&quot;{&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;「&quot;</span>
    <span class="token key atrule">&quot;}&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;」&quot;</span>
    <span class="token key atrule">&quot;#&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;#&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>当 value 是一个值时将直接输入，若是数组，哪怕只有一个元素，也会弹出候选框，例如 <code>&quot;{&quot; : [&quot;「&quot;]</code></p></blockquote><h4 id="_7、快捷键配置" tabindex="-1"><a class="header-anchor" href="#_7、快捷键配置"><span>7、快捷键配置</span></a></h4><p>注意这里和 mac 上 <code>Caps</code> 切换不是一回事。<code>Caps</code> 实际上是切换输入法，是系统级别的。这里是输入法内部的切换。</p><p>中文切换可用的按键包括 <code>Caps_Lock</code>, <code>Shift_L</code>, <code>Shift_R</code>, <code>Control_L</code>, <code>Control_R</code>，mac 系统的实现由于不区分左右按钮，故 <code>_R</code> 结尾的 key 不可使用。</p><p><strong>按下按钮后的动作有这几种：</strong></p><table><thead><tr><th style="text-align:left;">value</th><th style="text-align:left;">注释</th></tr></thead><tbody><tr><td style="text-align:left;">commit_text</td><td style="text-align:left;">提交候选区的文字，然后切换到英文模式。</td></tr><tr><td style="text-align:left;">commit_code</td><td style="text-align:left;">提交已输入的编码（拼音字母），然后切换到英文模式。</td></tr><tr><td style="text-align:left;">inline_ascii</td><td style="text-align:left;">仅 <code>inline_preedit=true</code> 时有效。在输入法的编辑区临时切换到英文，提交后恢复中文。</td></tr><tr><td style="text-align:left;">noop</td><td style="text-align:left;">不执行任何操作。</td></tr><tr><td style="text-align:left;">clear</td><td style="text-align:left;">清除已输入的编码，然后切换到英文模式。</td></tr></tbody></table><p>修改<code>default.custom.yaml</code>文件。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">patch</span><span class="token punctuation">:</span>
  <span class="token comment">## 切换输入法设置</span>
  <span class="token key atrule">ascii_composer/good_old_caps_lock</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">ascii_composer/switch_key</span><span class="token punctuation">:</span>
    <span class="token key atrule">Caps_Lock</span><span class="token punctuation">:</span> commit_code
    <span class="token key atrule">Control_L</span><span class="token punctuation">:</span> noop
    <span class="token key atrule">Control_R</span><span class="token punctuation">:</span> noop
    <span class="token key atrule">Shift_L</span><span class="token punctuation">:</span> commit_code
    <span class="token key atrule">Shift_R</span><span class="token punctuation">:</span> commit_code
  <span class="token key atrule">key_binder/bindings</span><span class="token punctuation">:</span>
  <span class="token comment">## 翻页设置[]</span>
    <span class="token punctuation">-</span> <span class="token key atrule">when</span><span class="token punctuation">:</span> paging
      <span class="token key atrule">accept</span><span class="token punctuation">:</span> bracketleft
      <span class="token key atrule">send</span><span class="token punctuation">:</span> Page_Up
    <span class="token punctuation">-</span> <span class="token key atrule">when</span><span class="token punctuation">:</span> has_menu
      <span class="token key atrule">accept</span><span class="token punctuation">:</span> bracketright
      <span class="token key atrule">send</span><span class="token punctuation">:</span> Page_Down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8、中英混输" tabindex="-1"><a class="header-anchor" href="#_8、中英混输"><span>8、中英混输</span></a></h4><p>这个不建议折腾了，我用了easy_en，配置完之后一直有个问题没解决，就是有些拼音拼错了，经常出现在第一个位置一长串的拼音英文，很影响输入体验。</p><p>我的中英混输配置如下，编辑<code>luna_pinyin_simp.custom.yaml</code>文件。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># 加載 easy_en 依賴</span>
<span class="token key atrule">&quot;schema/dependencies/@next&quot;</span><span class="token punctuation">:</span> easy_en
<span class="token comment"># 載入翻譯英文的碼表翻譯器，取名爲 english</span>
<span class="token key atrule">&quot;engine/translators/@next&quot;</span><span class="token punctuation">:</span> table_translator@english
<span class="token comment"># english 翻譯器的設定項</span>
<span class="token key atrule">english</span><span class="token punctuation">:</span>
  <span class="token key atrule">dictionary</span><span class="token punctuation">:</span> easy_en
  <span class="token key atrule">spelling_hints</span><span class="token punctuation">:</span> <span class="token number">9</span>
  <span class="token key atrule">enable_completion</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">enable_sentence</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">initial_quality</span><span class="token punctuation">:</span> <span class="token number">-3</span>
<span class="token key atrule">easy_en/enable_sentence</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>


<span class="token key atrule">__patch</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">patch/+</span><span class="token punctuation">:</span>
      <span class="token key atrule">__include</span><span class="token punctuation">:</span> emoji_suggestion<span class="token punctuation">:</span>/patch
      <span class="token key atrule">__include</span><span class="token punctuation">:</span> easy_en<span class="token punctuation">:</span>/patch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function w(R,C){const s=i("ExternalLinkIcon");return c(),p("div",null,[u,r,o(" more "),m,n("p",null,[n("a",k,[a("RIME | 中州韻輸入法引擎"),e(s)]),v,a(" RIME是一个开源的输入法引擎，基于这一框架，Rime 开发者与其他开源社区的参与者在 Windows、macOS、Linux、Android 等平台上创造了不同的输入法前端实现。")]),b,y,h,n("p",null,[a("下载地址："),n("a",g,[a("Release 0.16.2 · rime/squirrel (github.com)"),e(s)])]),_,n("p",null,[a("然后建立我们自己的词典，文件名为 "),f,a("，内容格式见 "),n("a",x,[a("wiki"),e(s)]),a(" 这里给出一个例子：")]),q])}const j=l(d,[["render",w],["__file","mac-recommend-input.html.vue"]]);export{j as default};
