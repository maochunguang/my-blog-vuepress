import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c as i,a as n,f as s,b as a,d as u,w as r,e}from"./app-3Ly0oyrh.js";const d={},k=n("h1",{id:"rust写一个命令行工具-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rust写一个命令行工具-1"},[n("span",null,"rust写一个命令行工具（1）")])],-1),m=n("code",null,"clap",-1),v=n("code",null,"my_dev_tool",-1),b={href:"https://github.com/maochunguang/my_dev_tool",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"如果你也想实现一个自己的命令行工具，可以按照以下步骤进行：",-1),g=e(`<h3 id="第-1-步-创建项目并添加依赖" tabindex="-1"><a class="header-anchor" href="#第-1-步-创建项目并添加依赖"><span>第 1 步：创建项目并添加依赖</span></a></h3><ol><li><p><strong>创建新的 Rust 项目</strong>：在终端中运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> new my_dev_tool
<span class="token builtin class-name">cd</span> my_dev_tool
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>添加依赖</strong>：在 <code>Cargo.toml</code> 中添加 <code>clap</code>、<code>serde</code>、<code>serde_json</code> 和 <code>chrono</code> 作为依赖：</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">clap</span> <span class="token punctuation">=</span> <span class="token string">&quot;4.4.0&quot;</span>
<span class="token key property">chrono</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.4&quot;</span>
<span class="token key property">urlencoding</span> <span class="token punctuation">=</span> <span class="token string">&quot;2.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="第-2-步-编写代码" tabindex="-1"><a class="header-anchor" href="#第-2-步-编写代码"><span>第 2 步：编写代码</span></a></h3><p>在 <code>src/main.rs</code> 中，使用 <code>clap</code> 定义命令行参数并实现功能。</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">clap<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Arg</span><span class="token punctuation">,</span> <span class="token class-name">ArgMatches</span><span class="token punctuation">,</span> <span class="token class-name">Command</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">chrono<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Local</span><span class="token punctuation">,</span> <span class="token class-name">TimeZone</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">urlencoding<span class="token punctuation">::</span></span><span class="token punctuation">{</span>decode<span class="token punctuation">,</span> encode<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> matches <span class="token operator">=</span> <span class="token class-name">Command</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;my_dev_tool&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">author</span><span class="token punctuation">(</span><span class="token string">&quot;Your Name &lt;your.email@example.com&gt;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token string">&quot;Developer&#39;s tool for urlencode and time format!&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subcommand_required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">arg_required_else_help</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subcommand</span><span class="token punctuation">(</span>
            <span class="token class-name">Command</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;urlencode&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token string">&quot;URL-encode a string&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token class-name">Arg</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;String to encode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subcommand</span><span class="token punctuation">(</span>
            <span class="token class-name">Command</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;urldecode&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token string">&quot;URL-decode a string&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token class-name">Arg</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;String to decode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subcommand</span><span class="token punctuation">(</span>
            <span class="token class-name">Command</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token string">&quot;Convert a UNIX timestamp to local datetime&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token class-name">Arg</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;UNIX timestamp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">get_matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">match</span> matches<span class="token punctuation">.</span><span class="token function">subcommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;urlencode&quot;</span><span class="token punctuation">,</span> sub_matches<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">url_encode</span><span class="token punctuation">(</span>sub_matches<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;urldecode&quot;</span><span class="token punctuation">,</span> sub_matches<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">url_decode</span><span class="token punctuation">(</span>sub_matches<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">,</span> sub_matches<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">convert_timestamp</span><span class="token punctuation">(</span>sub_matches<span class="token punctuation">)</span><span class="token punctuation">,</span>
        _ <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">url_encode</span><span class="token punctuation">(</span>matches<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">ArgMatches</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=</span> matches<span class="token punctuation">.</span><span class="token function">get_one</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token function">encode</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">url_decode</span><span class="token punctuation">(</span>matches<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">ArgMatches</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">=</span> matches<span class="token punctuation">.</span><span class="token function">get_one</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token function">decode</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">convert_timestamp</span><span class="token punctuation">(</span>matches<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">ArgMatches</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>timestamp_str<span class="token punctuation">)</span> <span class="token operator">=</span> matches<span class="token punctuation">.</span><span class="token function">get_one</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> timestamp <span class="token operator">=</span> timestamp_str<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i64</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> <span class="token class-name">Local</span><span class="token punctuation">.</span><span class="token function">timestamp_opt</span><span class="token punctuation">(</span>timestamp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">to_rfc3339</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第-3-步-编译和安装" tabindex="-1"><a class="header-anchor" href="#第-3-步-编译和安装"><span>第 3 步：编译和安装</span></a></h3><ol><li><p><strong>编译项目</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> build <span class="token parameter variable">--release</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>安装到系统</strong>：</p><ul><li><p>在 Linux 或 macOS 上，你可以将编译后的可执行文件复制到 <code>/usr/local/bin</code> 或其他 PATH 包含的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cp</span> target/release/my_dev_tool /usr/local/bin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在 Windows 上，你可以将可执行文件复制到任何 PATH 包含的目录，或者手动添加其所在目录到系统 PATH。</p></li></ul></li></ol><h3 id="第-4-步-使用工具" tabindex="-1"><a class="header-anchor" href="#第-4-步-使用工具"><span>第 4 步：使用工具</span></a></h3><p>一旦安装，你就可以直接在命令行中使用 <code>my_dev_tool</code>，例如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>my_dev_tool urlencode <span class="token string">&quot;https://example.com&quot;</span>
my_dev_tool urldecode <span class="token string">&quot;https%3A%2F%2Fexample.com&quot;</span>
my_dev_tool timestamp <span class="token number">1609459200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正常教程到这里就结束了，但是通过复制的方法安装命令行，实在是low，必须要使用一种装逼的方式来安装。因此，下面的步骤才是命令行装逼的关键，支持cargo安装。</p><h3 id="第5步-支持cargo安装" tabindex="-1"><a class="header-anchor" href="#第5步-支持cargo安装"><span>第5步，支持cargo安装</span></a></h3>`,12),_=n("code",null,"my_dev_tool",-1),f=n("code",null,"cargo install",-1),q={href:"https://crates.io/",target:"_blank",rel:"noopener noreferrer"},y={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},x={id:"第-1-步-注册-crates-io-帐户",tabindex:"-1"},w={class:"header-anchor",href:"#第-1-步-注册-crates-io-帐户"},C={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},A={href:"https://crates.io/",target:"_blank",rel:"noopener noreferrer"},S=n("li",null,'登录后，在 "Account Settings" 中获取你的 API 令牌。',-1),I=n("li",null,"验证自己的邮箱，邮箱只有验证成功才可以publish包。",-1),L=e(`<h4 id="第-2-步-登录-cargo" tabindex="-1"><a class="header-anchor" href="#第-2-步-登录-cargo"><span>第（2）步：登录 Cargo</span></a></h4><p>在你的终端中，使用以下命令登录 Cargo：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> login <span class="token punctuation">[</span>your_api_token<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),N=n("code",null,"[your_api_token]",-1),R={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},T=n("h4",{id:"第-3-步-准备发布",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第-3-步-准备发布"},[n("span",null,"第（3）步：准备发布")])],-1),P=n("code",null,"Cargo.toml",-1),U={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">package</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;my_dev_tool&quot;</span>
<span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.1.0&quot;</span>
<span class="token key property">authors</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Your Name &lt;youremail@example.com&gt;&quot;</span><span class="token punctuation">]</span>
<span class="token key property">edition</span> <span class="token punctuation">=</span> <span class="token string">&quot;2018&quot;</span>

<span class="token comment"># 以下是描述和文档链接等可选字段</span>
<span class="token key property">description</span> <span class="token punctuation">=</span> <span class="token string">&quot;A useful development tool for various tasks&quot;</span>
<span class="token key property">documentation</span> <span class="token punctuation">=</span> <span class="token string">&quot;https://example.com/my_dev_tool/docs&quot;</span>
<span class="token key property">license</span> <span class="token punctuation">=</span> <span class="token string">&quot;MIT OR Apache-2.0&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">clap</span> <span class="token punctuation">=</span> <span class="token string">&quot;3.0&quot;</span>
<span class="token key property">chrono</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.4&quot;</span>
<span class="token key property">urlencoding</span> <span class="token punctuation">=</span> <span class="token string">&quot;2.1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>确保更新 <code>authors</code>、<code>description</code>、<code>documentation</code>（如果适用），以及任何其他相关信息。</p>`,2),V={id:"第-4-步-发布到-crates-io",tabindex:"-1"},B={class:"header-anchor",href:"#第-4-步-发布到-crates-io"},D={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},E=e(`<p>在你的项目目录中运行以下命令来发布你的包：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> publish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),F={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},H=n("h3",{id:"第6步-通过-cargo-安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第6步-通过-cargo-安装"},[n("span",null,"第6步：通过 Cargo 安装")])],-1),z={href:"http://crates.io",target:"_blank",rel:"noopener noreferrer"},O=e(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> <span class="token function">install</span> my_dev_tool
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="展示成果" tabindex="-1"><a class="header-anchor" href="#展示成果"><span>展示成果</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>% <span class="token function">cargo</span> <span class="token function">install</span> my_dev_tool
    Updating crates.io index
  Downloaded my_dev_tool v0.1.0
  Downloaded <span class="token number">1</span> crate <span class="token punctuation">(</span><span class="token number">10.7</span> KB<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token number">2</span>.64s
  Installing my_dev_tool v0.1.0
    Updating crates.io index
   Compiling autocfg v1.1.0
   Compiling utf8parse v0.2.1
   Compiling anstyle-query v1.0.0
   Compiling colorchoice v1.0.0
   Compiling anstyle v1.0.4
   Compiling strsim v0.10.0
   Compiling clap_lex v0.6.0
   Compiling iana-time-zone v0.1.58
   Compiling urlencoding v2.1.3
   Compiling anstyle-parse v0.2.2
   Compiling anstream v0.6.4
   Compiling num-traits v0.2.17
   Compiling clap_builder v4.4.8
   Compiling chrono v0.4.31
   Compiling clap v4.4.8
   Compiling my_dev_tool v0.1.0
    Finished release <span class="token punctuation">[</span>optimized<span class="token punctuation">]</span> target<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token number">7</span>.84s
  Installing /home/maocg/.cargo/bin/my_dev_tool
   Installed package <span class="token variable"><span class="token variable">\`</span>my_dev_tool v0.1.0<span class="token variable">\`</span></span> <span class="token punctuation">(</span>executable <span class="token variable"><span class="token variable">\`</span>my_dev_tool<span class="token variable">\`</span></span><span class="token punctuation">)</span>

% my_dev_tool timestamp <span class="token number">1609459200</span>
<span class="token number">2021</span>-01-01T08:00:00+08:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li>在发布之前，请确保代码和文档是清晰和完整的，这对于其他人使用你的工具非常重要。</li><li>你需要更新版本号（在 <code>Cargo.toml</code> 中的 <code>version</code> 字段）在每次发布新的更改时。</li><li>如果你的工具包含敏感或专有信息，请在发布前仔细检查。</li></ul><h2 id="命令补全内容" tabindex="-1"><a class="header-anchor" href="#命令补全内容"><span>命令补全内容</span></a></h2>`,6);function X(Y,j){const t=o("ExternalLinkIcon"),p=o("RouterLink");return l(),i("div",null,[k,n("p",null,[s("本项目会使用 Rust 和 "),m,s(" 4.4.0 创建一个命令行工具 "),v,s("，先实现 urlencode、urldecode 和时间戳转换为本地时间三个功能。完整代码在github，"),n("a",b,[s("my_dev_tool"),a(t)]),s("。")]),h,u(" more "),g,n("p",null,[s("要使你的 "),_,s(" 命令行工具能够通过 "),f,s(" 安装，你需要将其发布到 "),n("a",q,[s("crates.io"),a(t)]),s("，这是 Rust 的包管理仓库。在发布之前，你需要创建一个帐户并获取一个 API 令牌用于身份验证。以下是将你的工具准备并发布到 "),n("a",y,[s("crates.io"),a(t)]),s(" 的步骤：")]),n("h4",x,[n("a",w,[n("span",null,[s("第（1）步：注册 "),n("a",C,[s("crates.io"),a(t)]),s(" 帐户")])])]),n("ol",null,[n("li",null,[s("访问 "),n("a",A,[s("crates.io"),a(t)]),s(" 并注册一个帐户。")]),S,I]),L,n("p",null,[s("将 "),N,s(" 替换为你在 "),n("a",R,[s("crates.io"),a(t)]),s(" 上的 API 令牌。")]),T,n("p",null,[s("确保你的 "),P,s(" 文件包含所有必要的信息，这对于发布至 "),n("a",U,[s("crates.io"),a(t)]),s(" 是必要的。下面是一个示例：")]),M,n("h4",V,[n("a",B,[n("span",null,[s("第（4）步：发布到 "),n("a",D,[s("crates.io"),a(t)])])])]),E,n("p",null,[s("这将会把你的包上传到 "),n("a",F,[s("crates.io"),a(t)]),s("。")]),H,n("p",null,[s("一旦你的包被成功发布到 "),n("a",z,[s("crates.io"),a(t)]),s("，其他人就可以通过运行以下命令来安装你的工具：")]),O,n("p",null,[a(p,{to:"/posts/rust-study/rust-command-tool-2.html"},{default:r(()=>[s("支持命令行提示")]),_:1})])])}const Z=c(d,[["render",X],["__file","rust-command-tool-1.html.vue"]]);export{Z as default};
