import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as n,f as s,b as e,d as i,e as t}from"./app-oknJlhnq.js";const u={},r=n("h1",{id:"rocket-diesel-mysql项目整合",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rocket-diesel-mysql项目整合"},[n("span",null,"rocket+diesel+mysql项目整合")])],-1),d={href:"https://github.com/maochunguang/rust-blog",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,[s("开发环境：win11+wsl2，rust版本"),n("code",null,"1.76.0-nightly"),s("，rocket版本"),n("code",null,"0.5.0"),s("，diesel版本 "),n("code",null,"2.1.0"),s("，mysql版本"),n("code",null,"8.0"),s("。")],-1),m=t(`<h2 id="第一步-安装rust环境" tabindex="-1"><a class="header-anchor" href="#第一步-安装rust环境"><span>第一步，安装rust环境</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--proto</span> <span class="token string">&#39;=https&#39;</span> <span class="token parameter variable">--tlsv1.2</span> <span class="token parameter variable">-sSf</span> https://sh.rustup.rs <span class="token operator">|</span> <span class="token function">sh</span>
<span class="token comment">## 设置rust为nightly或者dev都行，不要stable。</span>
rustup default nightly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="💡踩个小坑" tabindex="-1"><a class="header-anchor" href="#💡踩个小坑"><span>💡踩个小坑</span></a></h4><p>第一个坑在这里，如果不把rust设置为dev或者nightly后面安装diesel会报错，别问为啥报错，问就是框架就这样。</p><h2 id="第二步-安装diesel-cli" tabindex="-1"><a class="header-anchor" href="#第二步-安装diesel-cli"><span>第二步，安装diesel_cli</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> <span class="token function">install</span> diesel_cli --no-default-features <span class="token parameter variable">--features</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="💡踩个小坑-1" tabindex="-1"><a class="header-anchor" href="#💡踩个小坑-1"><span>💡踩个小坑</span></a></h4><p>如果不出意外，这里一定会报错，因为这个库底层依赖<code>mysqlclient</code>，更令人意外的是这个库是<code>python</code>的，所以你必须要在wsl2里安装好python环境，建议python版本3.10左右。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>note: ld: library not found for -lmysqlclient
clang: error: linker command failed with exit code 1 (use -v to see invocation)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>下面先安装<code>mysqlclient</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## 安装环境依赖</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> default-libmysqlclient-dev build-essential
pip <span class="token function">install</span> mysqlclient
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三步-初始化工程" tabindex="-1"><a class="header-anchor" href="#第三步-初始化工程"><span>第三步，初始化工程</span></a></h2><h4 id="初始化项目" tabindex="-1"><a class="header-anchor" href="#初始化项目"><span>初始化项目</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cargo</span> new <span class="token parameter variable">--lib</span> rust-blog

<span class="token builtin class-name">cd</span> rust-blog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改cargo-toml的依赖" tabindex="-1"><a class="header-anchor" href="#修改cargo-toml的依赖"><span>修改Cargo.toml的依赖：</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[dependencies]
rocket = {version = &quot;0.5.0&quot;, features =[&quot;json&quot;]}
diesel = { version = &quot;2.1.0&quot;, features = [&quot;mysql&quot;, &quot;r2d2&quot;, &quot;chrono&quot;] }
r2d2 = &quot;0.8.10&quot;
r2d2_mysql = &quot;23.0.0&quot;
rocket_sync_db_pools = { version = &quot;0.1.0&quot;, features = [&quot;diesel&quot;, &quot;diesel_mysql_pool&quot;] }
serde = { version = &quot;1.0&quot;, features = [&quot;derive&quot;] }
# Powerful date and time functionality
chrono = { version = &quot;0.4.15&quot;, features = [&quot;serde&quot;] }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建数据库配置" tabindex="-1"><a class="header-anchor" href="#创建数据库配置"><span>创建数据库配置</span></a></h4><p>创建<code>.env</code>文件, 里面是你的mysql数据库地址，</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>DATABASE_URL=mysql://devbox:mypassword@localhost/my_blog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建<code>diesel.toml</code>配置文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># For documentation on how to configure this file,
# see https://diesel.rs/guides/configuring-diesel-cli

[print_schema]
file = &quot;src/schema.rs&quot;
custom_type_derives = [&quot;diesel::query_builder::QueryId&quot;]

[migrations_directory]
dir = &quot;migrations&quot;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="执行diesel命令-生成代码" tabindex="-1"><a class="header-anchor" href="#执行diesel命令-生成代码"><span>执行diesel命令，生成代码</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>diesel migration generate create_users
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改mirations目录下的up.sql和down.sql。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">---- up.sql start-------</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> blog_users <span class="token punctuation">(</span>
    id <span class="token keyword">BIGINT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户唯一标识&#39;</span><span class="token punctuation">,</span>
    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
    password_hash <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;存储加密后的密码&#39;</span><span class="token punctuation">,</span>
    email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户电子邮件地址&#39;</span><span class="token punctuation">,</span>
    create_time <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;记录创建时间&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;存储用户信息&#39;</span><span class="token punctuation">;</span>
<span class="token comment">---- up.sql end-------</span>

<span class="token comment">---- down.sql start-------</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> blog_users<span class="token punctuation">;</span>
<span class="token comment">---- up.sql end-------</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行<code>diesel migration run</code>生成schema.rs文件。<br> 执行<code>diesel migration redo</code>测试down.sql是否生效。</p>`,26),v={id:"创建main-rs-跑一下hello-world",tabindex:"-1"},b={class:"header-anchor",href:"#创建main-rs-跑一下hello-world"},g={href:"http://xn--main-pj9fv59d.rs",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token comment">// main.rs</span>
<span class="token attribute attr-name">#[macro_use]</span> <span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">rocket</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[get(<span class="token string">&quot;/&quot;</span>)]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token keyword">str</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Hello, world!&quot;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[launch]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">rocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> _ <span class="token punctuation">{</span>
    <span class="token namespace">rocket<span class="token punctuation">::</span></span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token macro property">routes!</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行<code>cargo build</code>，<code>cargo run</code>，访问<code>localhost:8000</code>，检验一下项目。</p><h2 id="第四步、创建项目结构" tabindex="-1"><a class="header-anchor" href="#第四步、创建项目结构"><span>第四步、创建项目结构，</span></a></h2><p>整体的项目结构如下，前期为了项目入手难度低，所有的模块都在src根目录，这样比较方便简单。而且所有的mod定义也都在main.rs里，这样各个文件引用也简单。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">.</span>
├── Cargo.toml
├── README.md
├── Rocket.toml         <span class="token comment">### rocket框架配置</span>
├── diesel.toml         <span class="token comment">### 数据库链接配置</span>
└── src
    ├── db_conn.rs      <span class="token comment">### 数据库链接配置</span>
    ├── main.rs         <span class="token comment">### 服务启动文件</span>
    ├── models.rs       <span class="token comment">### 全局model的定义</span>
    ├── routes.rs       <span class="token comment">### 路由文件</span>
    ├── schema.rs       <span class="token comment">### diesel生成的文件</span>
    └── user_lib.rs     <span class="token comment">### service核心逻辑</span>
├── migrations
│   └── <span class="token number">2023</span>-11-20-123055_create_users
│       ├── down.sql
│       └── up.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第五步-创建数据库连接" tabindex="-1"><a class="header-anchor" href="#第五步-创建数据库连接"><span>第五步，创建数据库连接</span></a></h2><h4 id="修改db-conn-rs" tabindex="-1"><a class="header-anchor" href="#修改db-conn-rs"><span>修改<code>db_conn.rs</code>，</span></a></h4><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">rocket_sync_db_pools<span class="token punctuation">::</span></span><span class="token punctuation">{</span>database<span class="token punctuation">,</span> diesel<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 数据库连接</span>
<span class="token attribute attr-name">#[database(<span class="token string">&quot;mysql_db&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">DbConn</span><span class="token punctuation">(</span><span class="token namespace">diesel<span class="token punctuation">::</span></span><span class="token class-name">MysqlConnection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="💡踩个小坑-2" tabindex="-1"><a class="header-anchor" href="#💡踩个小坑-2"><span>💡踩个小坑</span></a></h4><p>这里有个坑，刚开始<code>diesel</code>就是无法引入进来，最后在源码里找到了答案。也就是依赖里<code>feature</code>必须要有以下三个之一，才会有<code>diesel</code></p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[cfg(any(
    feature = <span class="token string">&quot;diesel_sqlite_pool&quot;</span>,
    feature = <span class="token string">&quot;diesel_postgres_pool&quot;</span>,
    feature = <span class="token string">&quot;diesel_mysql_pool&quot;</span>
))]</span>
<span class="token keyword">pub</span> <span class="token keyword">use</span> diesel<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),y={id:"然后修改main-rs-把数据库相关加进去",tabindex:"-1"},f={class:"header-anchor",href:"#然后修改main-rs-把数据库相关加进去"},_={href:"http://xn--main-486fn2tbv7aobu.rs",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">mod</span> <span class="token module-declaration namespace">db_conn</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">db_conn<span class="token punctuation">::</span></span><span class="token class-name">DbConn</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">rocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> _ <span class="token punctuation">{</span>
    <span class="token namespace">rocket<span class="token punctuation">::</span></span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">DbConn</span><span class="token punctuation">::</span><span class="token function">fairing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token function">get_routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第六步-修改models文件" tabindex="-1"><a class="header-anchor" href="#第六步-修改models文件"><span>第六步，修改models文件</span></a></h2><p>这一步会把crud需要的对象创建好。</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Serialize</span><span class="token punctuation">,</span> <span class="token class-name">Deserialize</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>schema<span class="token punctuation">::</span></span>blog_users<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">diesel<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token comment">// 对应于 blog_users 表的 Rust 结构体</span>
<span class="token attribute attr-name">#[derive(Serialize, Deserialize, Queryable, Identifiable, AsChangeset, Clone)]</span>
<span class="token attribute attr-name">#[diesel(table_name = blog_users)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">BlogUser</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> username<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> password_hash<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> email<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> create_time<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token namespace">chrono<span class="token punctuation">::</span></span><span class="token class-name">NaiveDateTime</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 用于创建新用户的结构体，不包含 id 和 create_time 字段</span>
<span class="token attribute attr-name">#[derive(Serialize, Deserialize, Insertable, Clone)]</span>
<span class="token attribute attr-name">#[diesel(table_name = blog_users)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">NewBlogUser</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> username<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> password_hash<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> email<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第七步-修改use-lib文件" tabindex="-1"><a class="header-anchor" href="#第七步-修改use-lib文件"><span>第七步，修改use_lib文件</span></a></h2><p>user_lib可以看成是service文件，crud核心逻辑都在这里。</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">diesel<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>models<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">BlogUser</span><span class="token punctuation">,</span> <span class="token class-name">NewBlogUser</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>db_conn<span class="token punctuation">::</span></span><span class="token class-name">DbConn</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">DbConn</span><span class="token punctuation">,</span> new_user<span class="token punctuation">:</span> <span class="token class-name">NewBlogUser</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">QueryResult</span><span class="token operator">&lt;</span><span class="token keyword">usize</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>schema<span class="token punctuation">::</span>blog_users<span class="token punctuation">::</span>dsl<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> new_user_clone <span class="token operator">=</span> new_user<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 克隆 new_user</span>
    conn<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>c<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token namespace">diesel<span class="token punctuation">::</span></span><span class="token function">insert_into</span><span class="token punctuation">(</span>blog_users<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>new_user_clone<span class="token punctuation">)</span> <span class="token comment">// 使用克隆</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">DbConn</span><span class="token punctuation">,</span> user_id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">QueryResult</span><span class="token operator">&lt;</span><span class="token class-name">BlogUser</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>schema<span class="token punctuation">::</span>blog_users<span class="token punctuation">::</span>dsl<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

    conn<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>c<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        blog_users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">BlogUser</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">update_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">DbConn</span><span class="token punctuation">,</span> user_id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span> user_data<span class="token punctuation">:</span> <span class="token class-name">BlogUser</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">QueryResult</span><span class="token operator">&lt;</span><span class="token keyword">usize</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>schema<span class="token punctuation">::</span>blog_users<span class="token punctuation">::</span>dsl<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> new_user_clone <span class="token operator">=</span> user_data<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 克隆 new_user</span>

    conn<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>c<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token namespace">diesel<span class="token punctuation">::</span></span><span class="token function">update</span><span class="token punctuation">(</span>blog_users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>new_user_clone<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">delete_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">DbConn</span><span class="token punctuation">,</span> user_id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">QueryResult</span><span class="token operator">&lt;</span><span class="token keyword">usize</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>schema<span class="token punctuation">::</span>blog_users<span class="token punctuation">::</span>dsl<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

    conn<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>c<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token namespace">diesel<span class="token punctuation">::</span></span><span class="token function">delete</span><span class="token punctuation">(</span>blog_users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="💡踩个小坑-3" tabindex="-1"><a class="header-anchor" href="#💡踩个小坑-3"><span>💡踩个小坑</span></a></h4><p>这里有个坑，就是models的对象，和schema里的对象必须完全一致。否则在查询的时候会出现类型转换错误，这里的原因是models的对象个别字段没加<code>Option</code>,如果schema里字段有<code>Nullable</code>，models的对象<code>Option</code>必须要加上。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code> the trait bound \`(BigInt, Text, Text, diesel::sql_types::Nullable&lt;Text&gt;, diesel::sql_types::Nullable&lt;diesel::sql_types::Timestamp&gt;): load_dsl::private::CompatibleType&lt;BlogUser, Mysql&gt;\` is not satisfied
    --&gt; src/user_lib.rs:19:52
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第八步-修改routes文件" tabindex="-1"><a class="header-anchor" href="#第八步-修改routes文件"><span>第八步，修改routes文件</span></a></h2><p>这里一次性把所有的route都创建好，统一放到routes.rs文件，然后在main.rs里引用routes，进行路由。</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">rocket<span class="token punctuation">::</span>serde<span class="token punctuation">::</span>json<span class="token punctuation">::</span></span><span class="token class-name">Json</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rocket<span class="token punctuation">::</span>http<span class="token punctuation">::</span></span><span class="token class-name">Status</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>db_conn<span class="token punctuation">::</span></span><span class="token class-name">DbConn</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>models<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">BlogUser</span><span class="token punctuation">,</span> <span class="token class-name">NewBlogUser</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>user_lib</span> <span class="token keyword">as</span> lib<span class="token punctuation">;</span>  <span class="token comment">// 引入 lib.rs 中的函数</span>

<span class="token attribute attr-name">#[get(<span class="token string">&quot;/&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token keyword">str</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Welcome to the Blog API&quot;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[post(<span class="token string">&quot;/users/create&quot;</span>, data = <span class="token string">&quot;&lt;user&gt;&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token class-name">DbConn</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">NewBlogUser</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> <span class="token namespace">lib<span class="token punctuation">::</span></span><span class="token function">create_user</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">into_inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">Created</span><span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">InternalServerError</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[get(<span class="token string">&quot;/users/&lt;id&gt;&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token class-name">DbConn</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">BlogUser</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Status</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token namespace">lib<span class="token punctuation">::</span></span><span class="token function">get_user</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Json</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>_<span class="token closure-punctuation punctuation">|</span></span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[put(<span class="token string">&quot;/users/&lt;id&gt;&quot;</span>, data = <span class="token string">&quot;&lt;user&gt;&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">update_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token class-name">DbConn</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">BlogUser</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> <span class="token namespace">lib<span class="token punctuation">::</span></span><span class="token function">update_user</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span> id<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">into_inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">Ok</span><span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[delete(<span class="token string">&quot;/users/&lt;id&gt;&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">delete_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token class-name">DbConn</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> <span class="token namespace">lib<span class="token punctuation">::</span></span><span class="token function">delete_user</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">Ok</span><span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Status</span><span class="token punctuation">::</span><span class="token class-name">NotFound</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token namespace">rocket<span class="token punctuation">::</span></span><span class="token class-name">Route</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token macro property">routes!</span><span class="token punctuation">[</span>
        index<span class="token punctuation">,</span>
        create_user<span class="token punctuation">,</span>
        get_user<span class="token punctuation">,</span>
        update_user<span class="token punctuation">,</span>
        delete_user
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="💡踩个小坑-4" tabindex="-1"><a class="header-anchor" href="#💡踩个小坑-4"><span>💡踩个小坑</span></a></h4><p><code>rocket</code>配置依赖的时候，也得设置<code>feature</code>，要不然json找不到。</p><h2 id="第九步-统一请求返回结构" tabindex="-1"><a class="header-anchor" href="#第九步-统一请求返回结构"><span>第九步，统一请求返回结构</span></a></h2><p>先定义通用的返回结构：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),q={id:"修改models-rs",tabindex:"-1"},x={class:"header-anchor",href:"#修改models-rs"},C={href:"http://xn--models-2g0js76l.rs",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>先定义一个通用返回类型<code>ResData</code></p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Serialize, Deserialize, Clone)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">ResData</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">pub</span> code<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> data<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),N={id:"修改routes-rs",tabindex:"-1"},T={class:"header-anchor",href:"#修改routes-rs"},S={href:"http://xn--routes-2g0js76l.rs",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>以create_user为例子，进行返回值的修改。其他接口的返回值与其类似。</p><div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[post(<span class="token string">&quot;/users/create&quot;</span>, data = <span class="token string">&quot;&lt;user&gt;&quot;</span>, format = <span class="token string">&quot;application/json&quot;</span>)]</span>
<span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_user</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token class-name">DbConn</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">NewBlogUser</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Json</span><span class="token operator">&lt;</span><span class="token class-name">ResData</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> <span class="token namespace">lib<span class="token punctuation">::</span></span><span class="token function">create_user</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">into_inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Json</span><span class="token punctuation">(</span><span class="token class-name">ResData</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token class-name">None</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Json</span><span class="token punctuation">(</span><span class="token class-name">ResData</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token class-name">None</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),D={id:"第十步-修改最终的main-rs",tabindex:"-1"},O={class:"header-anchor",href:"#第十步-修改最终的main-rs"},B={href:"http://xn--main-486fx14i9uc518bdtp.rs",target:"_blank",rel:"noopener noreferrer"},M=t(`<div class="language-rust line-numbers-mode" data-ext="rs" data-title="rs"><pre class="language-rust"><code><span class="token attribute attr-name">#[macro_use]</span> <span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">rocket</span><span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">diesel</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">schema</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">models</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">routes</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">db_conn</span><span class="token punctuation">;</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">user_lib</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">routes<span class="token punctuation">::</span></span>get_routes<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">db_conn<span class="token punctuation">::</span></span><span class="token class-name">DbConn</span><span class="token punctuation">;</span>


<span class="token comment">// Rocket 启动函数</span>
<span class="token attribute attr-name">#[launch]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">rocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> _ <span class="token punctuation">{</span>
    <span class="token namespace">rocket<span class="token punctuation">::</span></span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">DbConn</span><span class="token punctuation">::</span><span class="token function">fairing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token function">get_routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改配置-调试代码" tabindex="-1"><a class="header-anchor" href="#修改配置-调试代码"><span>修改配置，调试代码</span></a></h4><p>修改Rocket.tom文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[global]
port = 9900

[global.databases]
mysql_db = { url = &quot;mysql://devbox:mypassword@localhost/my_blog&quot; }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行<code>cargo build</code>,<code>cargo run</code>看看是否有编译错误，有的话根据报错进行修复。访问localhost:9900/</p><h4 id="看看成果" tabindex="-1"><a class="header-anchor" href="#看看成果"><span>看看成果</span></a></h4><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>GET /users/1 text/html:
   &gt;&gt; Matched: (get_user) GET /users/&lt;id&gt;
   &gt;&gt; Outcome: Success(200 OK)
   &gt;&gt; Response succeeded.
GET / text/html:
   &gt;&gt; Matched: (index) GET /
   &gt;&gt; Outcome: Success(200 OK)
   &gt;&gt; Response succeeded.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="todo" tabindex="-1"><a class="header-anchor" href="#todo"><span>todo</span></a></h2><ol><li>单元测试</li><li>登录校验</li><li>日志配置</li></ol><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>`,10),A={href:"https://doc.rust-lang.org/book/",target:"_blank",rel:"noopener noreferrer"},U={href:"https://rocket.rs/v0.5/guide/getting-started/#hello-world",target:"_blank",rel:"noopener noreferrer"},I={href:"https://diesel.rs/guides/getting-started",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.rs/diesel/2.1.0/diesel/index.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://pypi.org/project/mysqlclient/",target:"_blank",rel:"noopener noreferrer"};function L(J,V){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[s("整个项目都是以最新框架版本进行整合，踩坑无数次，网上的教程都是残缺不全，要么版本老旧，这点必须吐槽rust生态是很烂，框架文档也是稀烂，很多问题都是看源码解决的。希望本教程能给刚学习rust的朋友一些帮助。完整代码在github，"),n("a",d,[s("rust-blog"),e(a)]),s("。")]),k,i(" more "),m,n("h4",v,[n("a",b,[n("span",null,[n("a",g,[s("创建main.rs"),e(a)]),s("，跑一下hello,world")])])]),h,n("h4",y,[n("a",f,[n("span",null,[n("a",_,[s("然后修改main.rs"),e(a)]),s("，把数据库相关加进去")])])]),w,n("h4",q,[n("a",x,[n("span",null,[n("a",C,[s("修改models.rs"),e(a)])])])]),E,n("h4",N,[n("a",T,[n("span",null,[n("a",S,[s("修改routes.rs"),e(a)])])])]),R,n("h2",D,[n("a",O,[n("span",null,[s("第十步，"),n("a",B,[s("修改最终的main.rs"),e(a)])])])]),M,n("ol",null,[n("li",null,[s("rust文档："),n("a",A,[s("https://doc.rust-lang.org/book/"),e(a)])]),n("li",null,[s("rocket文档： "),n("ul",null,[n("li",null,[s("rocket官方文档，"),n("a",U,[s("https://rocket.rs/v0.5/guide/getting-started/#hello-world"),e(a)])])])]),n("li",null,[s("diesel文档： "),n("ul",null,[n("li",null,[s("官方入门文档，"),n("a",I,[s("https://diesel.rs/guides/getting-started"),e(a)])]),n("li",null,[s("rust-doc文档，"),n("a",j,[s("https://docs.rs/diesel/2.1.0/diesel/index.html"),e(a)])])])]),n("li",null,[s("mysqlclient："),n("a",z,[s("https://pypi.org/project/mysqlclient/"),e(a)])])])])}const P=p(u,[["render",L],["__file","rust-rocket-diesel-web.html.vue"]]);export{P as default};
